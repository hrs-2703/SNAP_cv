import cv2
import cvzone

cap = cv2.VideoCapture(0)
cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Load overlay images
overlays = {
    '1': cv2.imread('cool.png', cv2.IMREAD_UNCHANGED),
    '2': cv2.imread('native.png', cv2.IMREAD_UNCHANGED),
    '3': cv2.imread('pirate.png', cv2.IMREAD_UNCHANGED),
    '4': cv2.imread('star.png', cv2.IMREAD_UNCHANGED),
    '5': cv2.imread('beard.png', cv2.IMREAD_UNCHANGED),
    '6': cv2.imread('sunglass.png', cv2.IMREAD_UNCHANGED)
}

current_overlay = None

while True:
    ret, frame = cap.read()
    if not ret:
        break

    frame = cv2.flip(frame, 1)
    gray_scale = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = cascade.detectMultiScale(gray_scale)

    for (x, y, w, h) in faces:
        if current_overlay is not None:
            overlay_resize = cv2.resize(current_overlay, (int(w * 1.5), int(h * 1.5)))
            frame = cvzone.overlayPNG(frame, overlay_resize, [x - 45, y - 75])

    cv2.imshow('Snap Dude', frame)

    key = cv2.waitKey(1) & 0xFF  # Wait for a key press with bitwise AND to handle key codes correctly
    if key == ord('q'):
        break
    elif chr(key) in overlays:
        current_overlay = overlays[chr(key)]

cap.release()
cv2.destroyAllWindows()
